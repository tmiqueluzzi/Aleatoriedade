# A ideia é automatizar adicionar uma lista de músicas numa playlist do Youtube.
## Primeiramente vamos obter uma lista com os nomes das músicas a serem adicionadas.

import os
from mutagen.easyid3 import EasyID3
from mutagen.wavpack import WavPack

def obter_metadados(arquivo):
    """
    Obtém os metadados de um arquivo de áudio (MP3 ou WAV).
    
    :param arquivo: Caminho do arquivo de áudio.
    :return: String no formato "Artistas Participantes - Título".
    """
    try:
        if arquivo.lower().endswith('.mp3'):
            audio = EasyID3(arquivo)
            artista = audio.get('artist', ['Desconhecido'])[0]
            titulo = audio.get('title', ['Sem título'])[0]
        elif arquivo.lower().endswith('.wav'):
            audio = WavPack(arquivo)
            artista = audio.tags.get('artist', 'Desconhecido')
            titulo = audio.tags.get('title', 'Sem título')
        else:
            return None
        
        return f"{artista} - {titulo}"
    except Exception:
        return "Metadados não disponíveis"

def listar_arquivos_audio(diretorio):
    """
    Lista os arquivos de áudio no diretório e retorna uma lista com os metadados.
    
    :param diretorio: Caminho da pasta a ser escaneada.
    :return: Lista de strings no formato "Artistas Participantes - Título".
    """
    lista_arquivos = []

    for root, _, files in os.walk(diretorio):
        for file in files:
            if file.lower().endswith(('.mp3', '.wav')):
                caminho_arquivo = os.path.join(root, file)
                info = obter_metadados(caminho_arquivo)
                lista_arquivos.append(info)
    
    return lista_arquivos

# Exemplo de uso
diretorio = input("Digite o caminho da pasta a ser escaneada: ")
arquivos = listar_arquivos_audio(diretorio)

print("\nArquivos de áudio encontrados:")
print(arquivos)  # Exibe a lista com os metadados
